{"version":3,"sources":["Components/Alert.js","Components/Navbar.js","Components/TextForm.js","Components/About.js","App.js","reportWebVitals.js","index.js"],"names":["Alert","props","style","height","alert","className","type","role","word","lower","toLowerCase","charAt","toUpperCase","slice","captalize","msg","Navbar","mode","to","title","id","onClick","toggleMode","htmlFor","Textform","useState","text","setText","color","value","backgroundColor","onChange","event","target","placeholder","rows","disabled","length","newText","showAlert","split","join","navigator","clipboard","writeText","filter","element","About","myStyle","prototype","PropTypes","string","isRequired","aboutText","App","setMode","setAlert","message","setTimeout","document","body","exact","path","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","getElementById"],"mappings":"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","file":"static/js/main.a6c01787.chunk.js","sourcesContent":["import React from 'react'\r\n\r\nexport default function Alert(props) {\r\n\r\n    const captalize = (word) => {\r\n        const lower = word.toLowerCase();\r\n        return lower.charAt(0).toUpperCase() + lower.slice(1);\r\n    }\r\n\r\n    return (\r\n        <div style={{height:\"50px\"}}>\r\n            {props.alert && <div className={`alert alert-${props.alert.type} alert-dismissible fade show`} role=\"alert\">\r\n                <strong> {captalize(props.alert.type)} </strong> : {props.alert.msg}\r\n                <button type=\"button\" className=\"btn-close\" data-bs-dismiss=\"alert\" aria-label=\"Close\"></button>\r\n            </div>}\r\n        </div>\r\n    )\r\n}\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\n\r\nexport default function Navbar(props) {\r\n    return (\r\n        <nav className={`navbar navbar-expand-lg navbar-${props.mode} bg-${props.mode}`}>\r\n            <div className=\"container-fluid\">\r\n                <Link className=\"navbar-brand\" to=\"/\">\r\n                    <b>{props.title}</b>\r\n                </Link>\r\n                <button\r\n                    className=\"navbar-toggler\"\r\n                    type=\"button\"\r\n                    data-bs-toggle=\"collapse\"\r\n                    data-bs-target=\"#navbarSupportedContent\"\r\n                    aria-controls=\"navbarSupportedContent\"\r\n                    aria-expanded=\"false\"\r\n                    aria-label=\"Toggle navigation\"\r\n                >\r\n                    <span className=\"navbar-toggler-icon\"></span>\r\n                </button>\r\n                <div className=\"collapse navbar-collapse\" id=\"navbarSupportedContent\">\r\n                    <ul className=\"navbar-nav me-auto mb-2 mb-lg-0\">\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link \" aria-current=\"page\" to=\"/\">\r\n                                <i className=\"bi bi-house-fill\"></i> Home\r\n                            </Link>\r\n                        </li>\r\n                        <li className=\"nav-item active\">\r\n                            <Link className=\"nav-link\" to=\"/about\">\r\n                                About\r\n                            </Link>\r\n                        </li>\r\n                    </ul>\r\n                    {/* <form className=\"d-flex\">\r\n                        <input\r\n                            className=\"form-control me-2\"\r\n                            type=\"search\"\r\n                            placeholder=\"Search\"\r\n                            aria-label=\"Search\"\r\n                        />\r\n                        <button className=\"btn btn-outline-warning\" type=\"submit\">\r\n                            Search\r\n                        </button>\r\n                    </form> */}\r\n                    {/* darkmode  */}\r\n                    <div className={`form-check form-switch text-${props.mode === 'light' ? \"dark\" : \"light\"} mx-3`}>\r\n                        <input className=\"form-check-input\" onClick={props.toggleMode} type=\"checkbox\" id=\"darkMode\" />\r\n                        <label className=\"form-check-label\" htmlFor=\"flexSwitchCheckDefault\">Enable DarkMode</label>\r\n                    </div>\r\n\r\n                </div>\r\n            </div>\r\n        </nav>\r\n    )\r\n}\r\n\r\n// using PropTypes\r\n\r\nNavbar.prototype = { title: PropTypes.string.isRequired, aboutText: PropTypes.string.isRequired }","import React, { useState } from 'react'\r\n// useState is a Hook \r\n\r\nexport default function Textform(props) {\r\n\r\n    const [text, setText] = useState(''); // hooks syntax\r\n\r\n    const upperClick = () => {\r\n        // console.log('UpperCase was Clicked '+ text);\r\n        let newText = text.toUpperCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to UpperCase \", \"success\");\r\n    }\r\n\r\n    const lowerClick = () => {\r\n        // console.log('Lowercase was Clicked '+ text);\r\n        let newText = text.toLowerCase();\r\n        setText(newText);\r\n        props.showAlert(\"Converted to LowerCase \", \"success\");\r\n    }\r\n\r\n    const clearClick = () => {\r\n        setText('');\r\n        props.showAlert(\"Box is Cleared \", \"success\");\r\n    }\r\n\r\n    const handleOnChange = (event) => {\r\n        // console.log('on Change');\r\n        setText(event.target.value);\r\n    }\r\n\r\n    const handleCopy = ()=>{\r\n        navigator.clipboard.writeText(text);\r\n        props.showAlert(\"Copied to Clipboard\", \"success\");\r\n    }\r\n\r\n    const handleExtraSpace = ()=>{\r\n        let newText = text.split(/[ ]+/);\r\n        setText(newText.join(\" \"));\r\n        props.showAlert(\"Extra Space has been Removed \", \"success\");\r\n    }\r\n\r\n\r\n    return (\r\n        <>\r\n        <div className=\"container my-3\" style={{color: props.mode === 'dark'? \"white\" : \"black\"}}>\r\n            <h1>Textutils - Word Counter,Character Counter,Lowercase to Uppercase,Uppercase to Lowercase,Remove ExtraSpace :</h1>\r\n            <div className=\"mb-3 my-2\" >\r\n              <textarea className=\"form-control\" id=\"myBox\" value={text} style={{backgroundColor: props.mode === 'dark'? \"#13466e\" : \"white\",color: props.mode === 'dark'? \"white\" : \"black\"}} onChange={handleOnChange} placeholder=\"Enter text here\" rows=\"8\"></textarea>\r\n            </div>\r\n            <button disabled={text.length===0} className=\"bt btn-primary mx-2 my-2\" onClick={upperClick}>Convert to Uppercase</button>\r\n            <button disabled={text.length===0} className=\"bt btn-danger mx-2 my-2\" onClick={lowerClick}>Convert to Lowercase</button>\r\n            <button disabled={text.length===0} className=\"bt btn-warning mx-2 my-2\" onClick={handleExtraSpace}>Remove ExtraSpaces</button>\r\n            <button disabled={text.length===0} className=\"bt btn-secondary mx-2 my-2\" onClick={clearClick}>Clear Text</button>\r\n            <button disabled={text.length===0} className=\"bt btn-info mx-2 my-2\" onClick={handleCopy}>Copy Text</button>\r\n\r\n        </div>\r\n        <hr />\r\n        <div className=\"container my-2\" style={{color: props.mode === 'dark'? \"white\" : \"black\"}}>\r\n            <h1>Word Counter</h1> <hr />\r\n            <h5>{text.split(/\\s+/).filter((element)=>{return element.length !== 0}).length} WORDS and {text.length} CHARACTERS , You can Read in {0.008 * text.split(\" \").filter((element)=>{return element.length !== 0}).length} Minutes</h5>\r\n            <hr/>\r\n            <h3>Preview : </h3>\r\n            <p>{text.length>0 ? text:\"Nothing to Preview..\"}</p>\r\n        </div>\r\n    </>  \r\n    )\r\n}\r\n","import React from 'react';\r\n\r\nexport default function About(props) {\r\n\r\n    const myStyle ={\r\n             color : props.mode === \"dark\" ? \"white\" : \"#042743\",\r\n             backgroundColor:props.mode === \"dark\" ? \"rgb(36 74 104)\" :'white',\r\n         };\r\n\r\n\r\n    return (\r\n        <div className=\"container\" >\r\n            <h1 className=\"my-3\"style={{color:props.mode === \"dark\" ? \"white\" : \"#042743\"}}>About us</h1>\r\n            <div className=\"accordion\" id=\"accordionExample\"  >\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingOne\">\r\n                        <button className=\"accordion-button\" style={myStyle}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseOne\" aria-expanded=\"true\" aria-controls=\"panelsStayOpen-collapseOne\">\r\n                            <b>Analyze Your Text</b> \r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"panelsStayOpen-collapseOne\" className=\"accordion-collapse collapse show\" aria-labelledby=\"panelsStayOpen-headingOne\">\r\n                        <div className=\"accordion-body\"  >\r\n                            Textutils Gives you to a Way to analize your Text Quickly and Efficiently. be it Word Count or Character and Preview, etc. \r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingTwo\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseTwo\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseTwo\">\r\n                            <b>Free to Use</b>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"panelsStayOpen-collapseTwo\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingTwo\">\r\n                        <div className=\"accordion-body\"  >\r\n                        Textutils is a Free Counter tool that provides instant Character Count & Word Count Statistics for a given text. Textutils reports the Number of words and Character. thus it suitable for Writing text with Word / Character limit.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n                <div className=\"accordion-item\" style={myStyle}>\r\n                    <h2 className=\"accordion-header\" id=\"panelsStayOpen-headingThree\">\r\n                        <button className=\"accordion-button collapsed\" style={myStyle}  type=\"button\" data-bs-toggle=\"collapse\" data-bs-target=\"#panelsStayOpen-collapseThree\" aria-expanded=\"false\" aria-controls=\"panelsStayOpen-collapseThree\">\r\n                            <b>Browser Compatible</b>\r\n                        </button>\r\n                    </h2>\r\n                    <div id=\"panelsStayOpen-collapseThree\" className=\"accordion-collapse collapse\" aria-labelledby=\"panelsStayOpen-headingThree\">\r\n                        <div className=\"accordion-body\"  >\r\n                        this word Counter Software Works in Any browsers such as Chrome, Firefox, Internet Explore, Safari, Opera. it Suits to Count Character in facebook, Blog, Books, Excel Document, pdf document, Essays, etc.\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </div>\r\n        </div>\r\n    )\r\n}\r\n","import \"./App.css\";\nimport Alert from \"./Components/Alert\";\nimport Navbar from \"./Components/Navbar\";\nimport TextForm from \"./Components/TextForm\";\nimport About from \"./Components/About\";\nimport React, { useState } from 'react';\nimport {BrowserRouter as Router,Switch,Route} from \"react-router-dom\";\n\nfunction App() {\n\n  const [mode, setMode] = useState(\"light\");\n  const [alert, setAlert] = useState(null);\n\n  const showAlert = (message, type) => {\n    setAlert({\n      msg: message,\n      type: type\n    })\n    setTimeout(() => {\n      setAlert(null);\n    }, 1500);\n  }\n\n  const toggleMode = () => {\n    if (mode === \"light\") {\n      setMode(\"dark\");\n      document.body.style.backgroundColor = \"#042743\";\n      showAlert(\"Dark Mode has been Enable\", \"success\");\n      // document.title = \"Textutils - Dark Mode\";\n    }\n    else {\n      setMode(\"light\");\n      document.body.style.backgroundColor = \"white\";\n      showAlert(\"Light Mode has been Enable\", \"success\");\n      // document.title = \"Textutils - Light Mode\";\n    }\n  }\n\n  return (\n    <>\n      {/* 1. one way - simple*/}\n      {/* <Navbar/> */}\n      {/* 2. another way - when using props and PropTypes*/}\n      <Router>\n        <Navbar title=\"Textutils\" mode={mode} toggleMode={toggleMode} />\n        <Alert alert={alert} />\n        <Switch>\n          <Route exact path=\"/about\"><About mode={mode}/></Route>\n          <Route exact path=\"/\"><TextForm showAlert={showAlert} mode={mode} /></Route>\n        </Switch>\n      </Router>\n    </>\n  );\n}\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}